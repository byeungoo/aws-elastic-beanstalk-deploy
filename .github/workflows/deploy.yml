name: helloworld-webapp

on:
  push:
    branches:
      - master
  workflow_dispatch: # 브랜치 push 뿐만 아니라 수동 실행도 가능하게 해줌

jobs:
  build:
    runs-on: ubuntu-latest # 깃허브 액션 스크립트가 작동될 OS 환경 지정

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # 프로젝트 코드를 check out

      - name: Set up JDK 11
        uses: actions/setup-java@v2 # 깃허브 액션이 실행될 OS에 Java 설치
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew # gradle wrapper를 실행할 수 있도록 권한 부여
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build # 프로젝트 빌드
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2  # 빌드 완료 시간 가져오기
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # 빌드 완료 시간 출력하기
        shell: bash

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

        # Beanstalk Deploy 플러그인 사용
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v19
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # github secrets로 등록한 값 사용
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # github secrets로 등록한 값 사용
          application_name: MyApplicationName
          environment_name: Helloworldwebapp-env-1 # EB environment 이름
          version_label: Github Action-${{steps.current-time.outputs.formattedTime}} # 배포 버전은 타임스탬프를 이용하여 구분
          region: ap-northeast-2
          deployment_package: deploy.zip
          wait_for_environment_recovery: 180 # default wait time은 30초이며, 필자의 EB가 느려서 180초로 지정했습니다(지정 안하면 간혹 timeout 발생).
